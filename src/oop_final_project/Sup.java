/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package oop_final_project;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Sandun
 */
public class Sup extends javax.swing.JPanel {

    /**
     * Creates new form New
     */
    public Sup() {
        initComponents();
        scr.setBackground(new Color(0.0f,0.0f,0.0f,0.3f));
        id();
        table();
        delete.setEnabled(false);
        update.setEnabled(false);
    }
public void id(){
    sup_id.setEditable(false);
    Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM supplier ORDER BY sup_id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int sup = rs.getInt("sup_id");
                sup=sup+1;
                String str = String.format("%03d", sup);
                sup_id.setText(str);                           //sup_id automaticall increase 1 for new record

}
              rs.close();
        }catch(SQLException k){

         }
}
public void table(){
    try{
           Class.forName("com.mysql.jdbc.Driver");
            Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                     
            String sql="SELECT * FROM supplier";
             
            
            PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs=ptst.executeQuery();
            DefaultTableModel tm=(DefaultTableModel)suppliers.getModel();
            tm.setRowCount(0);
            while(rs.next()){
            Object o[]={rs.getString("sup_id"),rs.getString("sup_name"),rs.getString("mobile")};
              tm.addRow(o);
            }
        
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scr = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sup_name = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        sup_id = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        suppliers = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scr.setBackground(new java.awt.Color(51, 51, 51));
        scr.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Suppliers list");
        scr.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 152, 53));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Supplier ID");
        scr.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 152, 53));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Supplier Name");
        scr.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 152, 53));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mobile");
        scr.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 152, 53));
        scr.add(sup_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 340, 30));
        scr.add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 340, 30));
        scr.add(sup_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 340, 30));

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        scr.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 270, 70, 30));

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        scr.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 80, 30));

        suppliers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Supplier Name", "Mobile"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        suppliers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suppliersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(suppliers);
        if (suppliers.getColumnModel().getColumnCount() > 0) {
            suppliers.getColumnModel().getColumn(1).setResizable(false);
            suppliers.getColumnModel().getColumn(2).setResizable(false);
        }

        scr.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 620, 140));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Add Supplier");
        scr.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 152, 53));

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        scr.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 80, 30));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        scr.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 270, 80, 30));

        add(scr, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 660));
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        try{
        Class.forName("com.mysql.jdbc.Driver");
            try (Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","")) {
                String sql="insert into supplier values (?,?,?)";
                PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
                ptst.setString(1,   sup_id.getText());
                ptst.setString(2,   sup_name.getText());
                ptst.setString(3,   mobile.getText());
                ptst.executeUpdate();
                
                
                String sql2="SELECT * FROM supplier";
                PreparedStatement ptst2 = (PreparedStatement) conn.prepareStatement(sql2);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)suppliers.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("sup_id"),rs.getString("sup_name"),rs.getString("mobile")};
                tm.addRow(o);
                }
                JOptionPane.showMessageDialog(null,"Data Inserted and Updated Successfully");
            }
           
           sup_id.setText("");
           sup_name.setText(""); 
           mobile.setText("");
           
           
           
                }catch(Exception e){
               JOptionPane.showMessageDialog(null,e);
                }
        Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM supplier ORDER BY sup_id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int sup = rs.getInt("sup_id");
                sup=sup+1;
                String str = String.format("%03d", sup);
                sup_id.setText(str);                           //sup_id automaticall increase 1 for new record

}
              rs.close();
        }catch(SQLException k){

         }
    }//GEN-LAST:event_addActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        update.setEnabled(false);
        delete.setEnabled(false);
        sup_name.setText(""); 
        mobile.setText("");
        Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM supplier ORDER BY sup_id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int sup = rs.getInt("sup_id");
                sup=sup+1;
                String str = String.format("%03d", sup);
                sup_id.setText(str);                           //again sup_id automaticall increase 1 for new record
                sup_name.setText("");                          
                mobile.setText("");                           
                
}
              rs.close();
        }catch(SQLException k){

         }
    }//GEN-LAST:event_clearActionPerformed

    private void suppliersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersMouseClicked
        // TODO add your handling code here:
        delete.setEnabled(true);
        update.setEnabled(true);
        DefaultTableModel tm=(DefaultTableModel)suppliers.getModel();
        int SelectedRow = suppliers.getSelectedRow();
        
        sup_id.setText(tm.getValueAt(SelectedRow, 0).toString());
        sup_name.setText(tm.getValueAt(SelectedRow, 1).toString());
        mobile.setText(tm.getValueAt(SelectedRow, 2).toString());
    }//GEN-LAST:event_suppliersMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String no=sup_id.getText();
        try{
           Class.forName("com.mysql.jdbc.Driver");
            Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                     
            String sql="UPDATE supplier SET sup_id=?, sup_name=?, mobile=? WHERE sup_id='"+no+"'";
            PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
            ptst.setString(1, sup_id.getText());
            ptst.setString(2, sup_name.getText());
            ptst.setString(3, mobile.getText()); //Update Database
            ptst.executeUpdate();
            
            
            
                String sql2="SELECT * FROM supplier";
                PreparedStatement ptst2 = (PreparedStatement) conn.prepareStatement(sql2);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)suppliers.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("sup_id"),rs.getString("sup_name"),rs.getString("mobile")};        //Update Table
                tm.addRow(o);
                                }
                update.setEnabled(false);
                delete.setEnabled(false);
                JOptionPane.showMessageDialog(null,"Data Updated Successfully");
                
                
                
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e); 
        }
        
        Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM supplier ORDER BY sup_id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int sup = rs.getInt("sup_id");
                sup=sup+1;
                String str = String.format("%03d", sup);
                sup_id.setText(str);                           //again sup_id automaticall increase 1 for new record
                sup_name.setText("");                          
                mobile.setText("");                           
                
}
              rs.close();
        }catch(SQLException k){

         }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String sp_id = sup_id.getText();
        int deleteitem;
        try {
            deleteitem= JOptionPane.showConfirmDialog(null, "Confirm if you want delete this item", "Warning", JOptionPane.YES_NO_OPTION);
            if(deleteitem==JOptionPane.YES_OPTION){
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                String sql="DELETE FROM supplier WHERE sup_id='"+sp_id+"'";
                PreparedStatement ptst = (PreparedStatement) con.prepareStatement(sql);
                ptst.executeUpdate();
                
                
                
                String sql3="SELECT * FROM supplier";
                PreparedStatement ptst2 = (PreparedStatement)con.prepareStatement(sql3);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)suppliers.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("sup_id"),rs.getString("sup_name"),rs.getString("mobile")};
                tm.addRow(o);                                           //Update  Table
                } 
                                 
        sup_id.setText("");                          
                             
        sup_name.setText(""); 
        mobile.setText("");
        delete.setEnabled(false);
        update.setEnabled(false);
            }
        } catch (Exception e) {
        }
        Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM supplier ORDER BY sup_id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int sup = rs.getInt("sup_id");
                sup=sup+1;
                String str = String.format("%03d", sup);
                sup_id.setText(str);                           //again sup_id automaticall increase 1 for new record
                sup_name.setText("");                          
                mobile.setText("");                           
                
}
              rs.close();
        }catch(SQLException k){

         }
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mobile;
    private javax.swing.JPanel scr;
    private javax.swing.JTextField sup_id;
    private javax.swing.JTextField sup_name;
    private javax.swing.JTable suppliers;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
