/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package oop_final_project;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sandun
 */
public class Add extends javax.swing.JPanel {

    /**
     * Creates new form New
     */
    public Add() {
        initComponents();
        scr.setBackground(new Color(0.0f,0.0f,0.0f,0.3f));
        table();
        delete.setEnabled(false);
        update.setEnabled(false);
    }
public void table(){
    try{
           Class.forName("com.mysql.jdbc.Driver");
            Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                     
            String sql="SELECT * FROM user";
            PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs=ptst.executeQuery();
            DefaultTableModel tm=(DefaultTableModel)users.getModel();
            tm.setRowCount(0);
            while(rs.next()){
            Object o[]={rs.getString("user_name"),rs.getString("pass"),rs.getString("type")};
            tm.addRow(o);
            }                                                           //data base data Showing in table
        
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scr = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        type = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        users = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scr.setBackground(new java.awt.Color(51, 51, 51));
        scr.setName(""); // NOI18N
        scr.setPreferredSize(new java.awt.Dimension(905, 655));
        scr.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Password");
        scr.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("User Name");
        scr.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add User");
        scr.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 120, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Type");
        scr.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, -1, -1));
        scr.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 300, 30));
        scr.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 300, 30));

        type.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        type.setForeground(new java.awt.Color(102, 0, 51));
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Sellesman" }));
        scr.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 141, 31));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        scr.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, 70, 30));

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        scr.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 60, 30));

        users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Password", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(users);
        if (users.getColumnModel().getColumnCount() > 0) {
            users.getColumnModel().getColumn(0).setResizable(false);
            users.getColumnModel().getColumn(1).setResizable(false);
            users.getColumnModel().getColumn(2).setResizable(false);
        }

        scr.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 600, 180));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("User List");
        scr.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 320, 160, 40));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        scr.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, 70, 30));

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        scr.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 70, 30));

        add(scr, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 660));
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        
        
        try{
        Class.forName("com.mysql.jdbc.Driver");
            try (Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","")) {
                String sql="insert into user values (?,?,?)";
                PreparedStatement ptst = (PreparedStatement) con.prepareStatement(sql);
                ptst.setString(1,user.getText());
                ptst.setString(2,pass.getText());
                ptst.setString(3,type.getSelectedItem().toString());            //Save insert data in user database
                ptst.executeUpdate();
                JOptionPane.showMessageDialog(null,"Data Inserted Successfully");
                
                
                String sql3="SELECT * FROM user";
                PreparedStatement ptst2 = (PreparedStatement)con.prepareStatement(sql3);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)users.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("user_name"),rs.getString("pass"),rs.getString("type")};
                tm.addRow(o);                                           //Update  Table
                }    
            }
           
           user.setText("");
           pass.setText("");        //clear fields
      
           
           
           
           
           
                }catch(Exception e){
               JOptionPane.showMessageDialog(null,e);
}
    }//GEN-LAST:event_saveActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        user.setText("");
        pass.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        
        String name = user.getText();
        int deleteitem;
        try {
            deleteitem= JOptionPane.showConfirmDialog(null, "Confirm if you want delete this item", "Warning", JOptionPane.YES_NO_OPTION);
            if(deleteitem==JOptionPane.YES_OPTION){
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                String sql="DELETE FROM user WHERE user_name='"+name+"'";
                PreparedStatement ptst = (PreparedStatement) con.prepareStatement(sql);
                ptst.executeUpdate();
                JOptionPane.showMessageDialog(null,"Data Deleted Successfully");  //Delete insert data in user database
                
                
                String sql3="SELECT * FROM user";
                PreparedStatement ptst2 = (PreparedStatement)con.prepareStatement(sql3);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)users.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("user_name"),rs.getString("pass"),rs.getString("type")};
                tm.addRow(o);                                           //Update  Table ASAP
                } 
        user.setText("");
        pass.setText("");
        delete.setEnabled(false);
        update.setEnabled(false);
            }
        } catch (Exception e) {
        } 
        
    }//GEN-LAST:event_deleteActionPerformed

    private void usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersMouseClicked
        // TODO add your handling code here:
        delete.setEnabled(true);
        update.setEnabled(true);
        DefaultTableModel tm=(DefaultTableModel)users.getModel();
        int SelectedRow = users.getSelectedRow();
        
        user.setText(tm.getValueAt(SelectedRow, 0).toString());
        pass.setText(tm.getValueAt(SelectedRow, 1).toString());
        type.setSelectedItem(tm.getValueAt(SelectedRow, 2).toString());
        
    }//GEN-LAST:event_usersMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
        String no=user.getText();
        try{
           Class.forName("com.mysql.jdbc.Driver");
            Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                     
            String sql="UPDATE user SET user_name=?, pass=?, type=? WHERE user_name='"+no+"'";
            PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
            ptst.setString(1, user.getText());
            ptst.setString(2, pass.getText());
            ptst.setString(3, type.getSelectedItem().toString()); 
                                      //Update user Database 
            ptst.executeUpdate();
            
            
            
                String sql2="SELECT * FROM user";
                PreparedStatement ptst2 = (PreparedStatement) conn.prepareStatement(sql2);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)users.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("user_name"),rs.getString("pass"),rs.getString("type")};        //Update Table ASAP
                tm.addRow(o);
                delete.setEnabled(false);                }
                update.setEnabled(false);
                JOptionPane.showMessageDialog(null,"Data Updated Successfully");
                
              user.setText("");
              pass.setText("");
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e); 
        }
        
    }//GEN-LAST:event_updateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pass;
    private javax.swing.JButton save;
    private javax.swing.JPanel scr;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JButton update;
    private javax.swing.JTextField user;
    private javax.swing.JTable users;
    // End of variables declaration//GEN-END:variables
}
