/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package oop_final_project;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sandun
 */
public class New extends javax.swing.JPanel {

    /**
     * Creates new form New
     */
    public New() {
        initComponents();
        suppliers();
        scr.setBackground(new Color(0.0f,0.0f,0.0f,0.3f));
        sup_name.setEditable(false);
        g_id();
        table();
        updte.setEnabled(false);
        delete.setEnabled(false);
    }
public void g_id(){
    id.setEditable(false);
    
}
public void table(){
    try{
           Class.forName("com.mysql.jdbc.Driver");
            Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                     
            String sql="SELECT * FROM list_of_goods";
             
            
            PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs=ptst.executeQuery();
            DefaultTableModel tm=(DefaultTableModel)item_list.getModel();
            tm.setRowCount(0);
            while(rs.next()){
            Object o[]={rs.getString("name"),rs.getString("id"),rs.getString("unit_price"),rs.getString("sup_id"),rs.getString("sup_name")};
              tm.addRow(o);
            } //showing data on table
        
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scr = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        s_id = new javax.swing.JComboBox<>();
        price = new javax.swing.JTextField();
        sup_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        item_list = new javax.swing.JTable();
        new_item = new javax.swing.JButton();
        updte = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(905, 655));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scr.setBackground(new java.awt.Color(51, 51, 51));
        scr.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("New Items");
        scr.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 163, 39));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");
        scr.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 115, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID");
        scr.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 115, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Unit Price");
        scr.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 115, 40));
        scr.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 312, 30));

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        scr.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 310, 30));

        s_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s_idActionPerformed(evt);
            }
        });
        scr.add(s_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 180, 40));
        scr.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 312, 30));

        sup_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_nameActionPerformed(evt);
            }
        });
        scr.add(sup_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 312, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Supplier Name");
        scr.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 140, 40));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        scr.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 70, 30));

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        scr.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 330, 70, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Supplier ID");
        scr.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 115, 40));

        item_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Unit Price", "Supplier ID", "Supplier Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        item_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(item_list);
        if (item_list.getColumnModel().getColumnCount() > 0) {
            item_list.getColumnModel().getColumn(0).setResizable(false);
            item_list.getColumnModel().getColumn(1).setResizable(false);
            item_list.getColumnModel().getColumn(2).setResizable(false);
            item_list.getColumnModel().getColumn(3).setResizable(false);
            item_list.getColumnModel().getColumn(4).setResizable(false);
        }

        scr.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 700, 150));

        new_item.setText("New");
        new_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_itemActionPerformed(evt);
            }
        });
        scr.add(new_item, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, -1));

        updte.setText("Update");
        updte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updteActionPerformed(evt);
            }
        });
        scr.add(updte, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, 70, 30));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        scr.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, -1, 30));

        add(scr, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 650));
    }// </editor-fold>//GEN-END:initComponents
    private void suppliers()
            {
            Statement stmt;
        try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM supplier");
            while(rs.next()){
            this.s_id.addItem(rs.getString(1));
            }
              rs.close();
        }catch(SQLException k){

         }
        }
    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void sup_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sup_nameActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try{
        Class.forName("com.mysql.jdbc.Driver");
            try (Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","")) {
                String sql="insert into list_of_goods values (?,?,?,?,?)";
                PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
                ptst.setString(1,   name.getText());
                ptst.setString(2,   id.getText());
                ptst.setString(3,   price.getText());
                 ptst.setString(4,  s_id.getSelectedItem().toString());
                ptst.setString(5,   sup_name.getText());
                ptst.executeUpdate();
                String sql2="SELECT * FROM list_of_goods";
                PreparedStatement ptst2 = (PreparedStatement) conn.prepareStatement(sql2);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)item_list.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("name"),rs.getString("id"),rs.getString("unit_price"),rs.getString("sup_id"),rs.getString("sup_name")};        //Update Table
                tm.addRow(o);
                                }
                updte.setEnabled(false);
              
            }
           
                }catch(Exception e){
               JOptionPane.showMessageDialog(null,e);
        
        
        
                }
        try{
        Class.forName("com.mysql.jdbc.Driver");
            try (Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","")) {
                String sql="insert into final_stock values (?,?,?)";
                PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
                ptst.setString(2,   name.getText());
                ptst.setString(1,   id.getText());
                ptst.setString(3,   "0");
              
               
                ptst.executeUpdate();
                JOptionPane.showMessageDialog(null,"Data Inserted Successfully");
            }
           
           s_id.setSelectedItem("");
           sup_name.setText(""); 
           id.setText("");
           name.setText("");
           price.setText("");
          
           
           
                }catch(Exception e){
               JOptionPane.showMessageDialog(null,e);
        
        
        
                }
           
    }//GEN-LAST:event_saveActionPerformed

    private void s_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s_idActionPerformed
        // TODO add your handling code here:
        String id = s_id.getSelectedItem().toString();
        Statement stmt;
    try{
        stmt=dbcon.getConnection();
        ResultSet rs= stmt.executeQuery("SELECT * FROM supplier where sup_id ='"+id+"'");
      
        while(rs.next()){
        this.sup_name.setText(rs.getString(2));
        
        
        }
          rs.close();
    }catch(SQLException k){
                  
     }
        
    }//GEN-LAST:event_s_idActionPerformed

    private void new_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_itemActionPerformed
        // TODO add your handling code here:
        Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM list_of_goods ORDER BY id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int n_id = rs.getInt("id");
                n_id=n_id+1;
                String str = String.format("%04d", n_id);
                id.setText(str);                           //Good id automaticall increase 1 for new record

}
              rs.close();
        }catch(SQLException k){

         }
     name.setText("");
     price.setText("");
    }//GEN-LAST:event_new_itemActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        name.setText("");
     price.setText("");
     sup_name.setText("");
     id.setText("");
     s_id.setSelectedItem("");
     delete.setEnabled(false);
     updte.setEnabled(false);
    }//GEN-LAST:event_clearActionPerformed

    private void item_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_listMouseClicked
        // TODO add your handling code here:
        updte.setEnabled(true);
        delete.setEnabled(true);
        DefaultTableModel tm=(DefaultTableModel)item_list.getModel();
        int SelectedRow = item_list.getSelectedRow();
        
        name.setText(tm.getValueAt(SelectedRow, 0).toString());
        id.setText(tm.getValueAt(SelectedRow, 1).toString());
        price.setText(tm.getValueAt(SelectedRow, 2).toString());
        s_id.setSelectedItem(tm.getValueAt(SelectedRow, 3).toString());
        sup_name.setText(tm.getValueAt(SelectedRow, 4).toString());
    }                                      

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        

    }//GEN-LAST:event_item_listMouseClicked

    private void updteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updteActionPerformed
        // TODO add your handling code here:
        String no=id.getText();
        try{
           Class.forName("com.mysql.jdbc.Driver");
            Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                     
            String sql="UPDATE list_of_goods SET name=?, id=?, unit_price=?, sup_id=?, sup_name=?  WHERE id='"+no+"'";
            PreparedStatement ptst = (PreparedStatement) conn.prepareStatement(sql);
            ptst.setString(1, name.getText());
            ptst.setString(2, id.getText());
            ptst.setString(3, price.getText()); 
            ptst.setString(4, s_id.getSelectedItem().toString()); 
            ptst.setString(5, sup_name.getText());                                   //Update Database
            ptst.executeUpdate();
            
            
            
                String sql2="SELECT * FROM list_of_goods";
                PreparedStatement ptst2 = (PreparedStatement) conn.prepareStatement(sql2);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)item_list.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("name"),rs.getString("id"),rs.getString("unit_price"),rs.getString("sup_id"),rs.getString("sup_name")};        //Update Table
                tm.addRow(o);
                                }
                updte.setEnabled(false);
                JOptionPane.showMessageDialog(null,"Data Updated Successfully");
                
                
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e); 
        }
        
        Statement stmt;
     try{
            stmt=dbcon.getConnection();
            ResultSet rs= stmt.executeQuery("SELECT * FROM list_of_goods ORDER BY id DESC LIMIT 1;");           //Taking Last value of table using descending order
            while(rs.next()){

                int sup = rs.getInt("id");
                sup=sup+1;
                String str = String.format("%04d", sup);
                id.setText(str);                           //again sup_id automaticall increase 1 for new record
                price.setText("");                          
                name.setText("");                           
                sup_name.setText("");                           
                
}
              rs.close();
        }catch(SQLException k){

         }
    }//GEN-LAST:event_updteActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String gd_id = id.getText();
        int deleteitem;
        try {
            deleteitem= JOptionPane.showConfirmDialog(null, "Confirm if you want delete this item", "Warning", JOptionPane.YES_NO_OPTION);
            if(deleteitem==JOptionPane.YES_OPTION){
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/grocery","root","");
                String sql="DELETE FROM list_of_goods WHERE id='"+gd_id+"'";
                PreparedStatement ptst = (PreparedStatement) con.prepareStatement(sql);
                ptst.executeUpdate();
                
                
                
                String sql3="SELECT * FROM list_of_goods";
                PreparedStatement ptst2 = (PreparedStatement)con.prepareStatement(sql3);
                ResultSet rs=ptst2.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)item_list.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                Object o[]={rs.getString("name"),rs.getString("id"),rs.getString("unit_price"),rs.getString("sup_id"),rs.getString("sup_name")};
                tm.addRow(o);                                           //Update  Table
                } 
        price.setText("");                          
        id.setText("");                          
        name.setText("");                           
        sup_name.setText("");  
        delete.setEnabled(false);
        updte.setEnabled(false);
            }
        } catch (Exception e) {
        } 
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JTextField id;
    private javax.swing.JTable item_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JButton new_item;
    private javax.swing.JTextField price;
    private javax.swing.JComboBox<String> s_id;
    private javax.swing.JButton save;
    private javax.swing.JPanel scr;
    private javax.swing.JTextField sup_name;
    private javax.swing.JButton updte;
    // End of variables declaration//GEN-END:variables
}
